cc -std=c99 -o jackc \
  lexer.c parser.c symbols.c compiler.c \
  SymbolGrader.c

cc -std=c99 lexer.h parser.h symbols.h compiler.h lexer.c parser.c symbols.c compiler.c 

# ① 若只测语法（ParserGrader）
cc -std=c99 \
    lexer.c parser.c         \   # 你的实现
    ParserGrader.c           \   # 老师给的自测主函数
    -o myparsertests             # 生成可执行文件

# ② 若之后测符号表 (SymbolGrader)
cc -std=c99 \
    lexer.c parser.c symbols.c compiler.c \
    SymbolGrader.c \
    -o sym_test

# ③ 若测代码生成 (CodeGrader)
cc -std=c99 \
    lexer.c parser.c symbols.c compiler.c \
    CodeGrader.c \
    -o cg_test
    
head -n 40 SymbolGrader.c | grep -n -E 'main|ifdef'

cc -std=c99 \
   -DTEST_SYMBOLS          \        # 让 SymbolGrader.c 真正编译它的 main
   lexer.c parser.c symbols.c compiler.c SymbolGrader.c \
   -o sym_test

cc -std=c99 \
    -DTEST             \    # 关闭 lexer.c 里的测试 main
    -DTEST_PARSER      \    # 关闭 parser.c 里的测试 main
    -DTEST_COMPILER    \    # 打开 SymbolGrader.c 里的测试 main
    lexer.c parser.c symbols.c compiler.c SymbolGrader.c \
    -o sym_test
